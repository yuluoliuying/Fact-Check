//author: ckf48
对于图片逆向搜索引擎的实现可能用到的技术

# 相似图片原理实现：

１．感知哈希算法（Perceptual hash algorithm）

它的作用是对每张图片生成一个"指纹"（fingerprint）字符串，然后比较不同图片的指纹。结果越接近，就说明图片越相似

２．颜色分布法

每张图片都可以生成[颜色分布的直方图](http://en.wikipedia.org/wiki/Color_histogram)（color histogram）。如果两张图片的直方图很接近，就可以认为它们很相似

３．内容特征法

首先，将原图转成一张较小的灰度图片，假定为50x50像素。然后，确定一个阈值，将灰度图片转成黑白图片。

如果两张图片很相似，它们的黑白轮廓应该是相近的。于是，问题就变成了，第一步如何确定一个合理的阈值，正确呈现照片中的轮廓？

显然，前景色与背景色反差越大，轮廓就越明显。这意味着，如果我们找到一个值，可以使得前景色和背景色各自的"类内差异最小"（minimizing the intra-class variance），或者"类间差异最大"（maximizing the inter-class variance），那么这个值就是理想的阈值。

1979年，日本学者大津展之证明了，"类内差异最小"与"类间差异最大"是同一件事，即对应同一个阈值。他提出一种简单的算法，可以求出这个阈值，这被称为["大津法"](http://en.wikipedia.org/wiki/Otsu's_method)（Otsu's method）

# 排序算法

１．Lucene

Lucene是一个高效的，可扩展的，基于Java的全文检索库

要注意的是它不是一个完整的搜索应用程序，而是为你的应用程序提供索引和搜索功能，

由于是它不是一个完整的搜索应用程序，所以有一些基于Lucene的开源搜索引擎产生，比如Elasticsearch和solr

2.

欧几里得距离（Eucledian Distance);

曼哈顿距离（Manhattan Distance);

明可夫斯基距离（Minkowski distance）